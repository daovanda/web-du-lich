"use client";

import { useEffect, useState } from "react";
import ResizableLayout from "@/components/ResizableLayout";

export default function AboutPage() {
  const [isInitialLoad, setIsInitialLoad] = useState(true);

  useEffect(() => {
    // Trigger initial load animation
    setTimeout(() => {
      setIsInitialLoad(false);
    }, 100);
  }, []);

  return (
    <ResizableLayout>
      <div className="min-h-screen bg-black text-white">
        <main 
          className={`max-w-4xl mx-auto px-6 py-12 space-y-16 transition-all duration-1000 ease-out ${
            isInitialLoad 
              ? 'opacity-0 translate-y-8' 
              : 'opacity-100 translate-y-0'
          }`}
        >
          {/* Hero */}
          <section 
            className={`text-center space-y-4 border-b border-neutral-800 pb-12 transition-all duration-700 ease-out delay-300 ${
              isInitialLoad 
                ? 'opacity-0 translate-y-6' 
                : 'opacity-100 translate-y-0'
            }`}
          >
            <h1 className="text-4xl font-extrabold tracking-tight">
              V·ªÅ ch√∫ng t√¥i
            </h1>
            <p className="text-gray-400 max-w-2xl mx-auto">
              Chagmihaydi ƒë∆∞·ª£c t·∫°o ra ƒë·ªÉ mang ƒë·∫øn cho b·∫°n tr·∫£i nghi·ªám du l·ªãch
              t·ªëi gi·∫£n, hi·ªán ƒë·∫°i v√† g·∫ßn g≈©i ‚Äì n∆°i b·∫°n c√≥ th·ªÉ l∆∞u gi·ªØ h√†nh tr√¨nh,
              k·∫øt n·ªëi d·ªãch v·ª• v√† kh√°m ph√° Vi·ªát Nam theo c√°ch ri√™ng c·ªßa m√¨nh.
            </p>
          </section>

          {/* Gi√° tr·ªã c·ªët l√µi */}
          <section 
            className={`space-y-8 transition-all duration-700 ease-out delay-500 ${
              isInitialLoad 
                ? 'opacity-0 translate-y-6' 
                : 'opacity-100 translate-y-0'
            }`}
          >
            <h2 className="text-2xl font-bold border-b border-neutral-800 pb-2">
              Gi√° tr·ªã c·ªët l√µi
            </h2>
            <div className="grid sm:grid-cols-2 gap-6">
              {[
                {
                  title: "T·ªëi gi·∫£n",
                  description: "M·ªçi thi·∫øt k·∫ø v√† tr·∫£i nghi·ªám ƒë·ªÅu g·ªçn g√†ng, tinh t·∫ø, lo·∫°i b·ªè chi ti·∫øt th·ª´a."
                },
                {
                  title: "K·∫øt n·ªëi",
                  description: "Ch√∫ng t√¥i k·∫øt n·ªëi b·∫°n v·ªõi d·ªãch v·ª•, s·ª± ki·ªán v√† c·ªông ƒë·ªìng du l·ªãch tr·∫ª trung."
                },
                {
                  title: "Kh√°m ph√°",
                  description: "Khuy·∫øn kh√≠ch b·∫°n m·ªü r·ªông h√†nh tr√¨nh, ƒë√°nh d·∫•u v√† l∆∞u gi·ªØ tr·∫£i nghi·ªám c·ªßa ri√™ng m√¨nh."
                },
                {
                  title: "Chia s·∫ª",
                  description: "M·ªçi h√†nh tr√¨nh ƒë·ªÅu tr·ªü n√™n √Ω nghƒ©a h∆°n khi ƒë∆∞·ª£c chia s·∫ª c√πng b·∫°n b√® v√† c·ªông ƒë·ªìng."
                }
              ].map((value, index) => (
                <div
                  key={value.title}
                  className={`bg-neutral-900 border border-neutral-800 rounded-xl p-6 space-y-2 hover:shadow-lg transition-all duration-300 ease-out ${
                    isInitialLoad 
                      ? 'opacity-0 translate-y-6' 
                      : 'opacity-100 translate-y-0'
                  }`}
                  style={{
                    transitionDelay: `${700 + index * 100}ms`
                  }}
                >
                  <h3 className="font-semibold text-lg">{value.title}</h3>
                  <p className="text-sm text-gray-400">
                    {value.description}
                  </p>
                </div>
              ))}
            </div>
          </section>

          {/* Phong c√°ch h∆∞·ªõng ƒë·∫øn */}
          <section 
            className={`space-y-4 transition-all duration-700 ease-out delay-1100 ${
              isInitialLoad 
                ? 'opacity-0 translate-y-6' 
                : 'opacity-100 translate-y-0'
            }`}
          >
            <h2 className="text-2xl font-bold border-b border-neutral-800 pb-2">
              Phong c√°ch ch√∫ng t√¥i h∆∞·ªõng ƒë·∫øn
            </h2>
            <p className="text-gray-400 leading-relaxed">
              M·ªôt n·ªÅn t·∫£ng mang ƒë·∫≠m tinh th·∫ßn <span className="text-white">tr·∫ª trung</span>,{" "}
              <span className="text-white">hi·ªán ƒë·∫°i</span> v√†{" "}
              <span className="text-white">t·ªëi gi·∫£n</span>. M·ªçi chi ti·∫øt ƒë·ªÅu ƒë∆∞·ª£c
              s·∫Øp ƒë·∫∑t ƒë·ªÉ b·∫°n t·∫≠p trung v√†o ƒëi·ªÅu quan tr·ªçng nh·∫•t:{" "}
              <span className="text-white">h√†nh tr√¨nh c·ªßa ch√≠nh b·∫°n</span>.
            </p>
          </section>

          {/* Th√¥ng ƒëi·ªáp cu·ªëi */}
          <section 
            className={`text-center space-y-4 border-t border-neutral-800 pt-12 transition-all duration-700 ease-out delay-1300 ${
              isInitialLoad 
                ? 'opacity-0 translate-y-6' 
                : 'opacity-100 translate-y-0'
            }`}
          >
            <p className="text-lg font-medium">
              Ch√∫ng t√¥i tin r·∫±ng m·ªói chuy·∫øn ƒëi ƒë·ªÅu l√† m·ªôt c√¢u chuy·ªán.
            </p>
            <p className="text-gray-400">
              H√£y c√πng ch√∫ng t√¥i vi·∫øt n√™n c√¢u chuy·ªán c·ªßa b·∫°n üåè
            </p>
          </section>
        </main>
      </div>
    </ResizableLayout>
  );
}